# Generated by Django 5.2.4 on 2025-07-18 08:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('fabriquant', models.CharField(max_length=100)),
                ('modele', models.CharField(max_length=100)),
                ('etat', models.CharField(choices=[('DISPO', 'Disponible'), ('EN_PANNE', 'En panne'), ('MAINTENANCE', 'Maintenance')], max_length=20)),
                ('destination', models.CharField(max_length=100)),
                ('localisation', models.CharField(max_length=100)),
                ('date_livraison', models.DateField()),
                ('duree_garantie', models.IntegerField()),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('type_equipement', models.CharField(choices=[('INDIVIDUEL', 'Individuel'), ('DEPARTEMENTAL', 'Départemental'), ('RESEAU', 'Réseau')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('ADMIN', 'Administrateur'), ('TECH', 'Technicien'), ('USER', 'Utilisateur')], max_length=10)),
                ('permissions', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Technicien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupe_affectation', models.CharField(max_length=100)),
                ('responsabilites', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(choices=[('CRITIQUE', 'Critique'), ('WARNING', 'Avertissement'), ('INFO', 'Information')], max_length=20)),
                ('resolue', models.BooleanField(default=False)),
                ('equipement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertes', to='app.equipement')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('description', models.TextField()),
                ('equipement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='app.equipement')),
                ('technicien', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenances', to='app.technicien')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('telephone', models.CharField(max_length=20)),
                ('emplacement', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs', to='app.service')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='technicien',
            name='utilisateur',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technicien', to='app.utilisateur'),
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('administration', models.CharField(max_length=100)),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='administrateur', to='app.utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='EquipementDepartemental',
            fields=[
                ('equipement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='departemental', serialize=False, to='app.equipement')),
                ('type', models.CharField(choices=[('ECRAN', 'Écran'), ('AFFICHAGE', 'Affichage'), ('SWITCH_RESEAU', 'Switch Réseau'), ('PC', 'PC'), ('TABLETTE', 'Tablette'), ('PHONE', 'Téléphone'), ('SWITCH_LOCALE', 'Switch Locale')], max_length=20)),
                ('date_affectation', models.DateField()),
                ('date_mise_en_service', models.DateField()),
                ('emplacement', models.CharField(max_length=100)),
                ('gerant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipements_departementaux', to='app.utilisateur')),
                ('service_attribue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipements_departements', to='app.service')),
            ],
        ),
        migrations.CreateModel(
            name='EquipementIndividuel',
            fields=[
                ('equipement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='individuel', serialize=False, to='app.equipement')),
                ('type', models.CharField(choices=[('PC', 'PC'), ('TABLETTE', 'Tablette'), ('PHONE', 'Téléphone'), ('SWITCH_LOCALE', 'Switch Locale')], max_length=20)),
                ('date_affectation', models.DateField()),
                ('date_mise_en_service', models.DateField()),
                ('proprietaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipements_individuels', to='app.utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='EquipementReseau',
            fields=[
                ('equipement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='reseau', serialize=False, to='app.equipement')),
                ('type', models.CharField(choices=[('SWITCH', 'Switch'), ('AP_WIFI', "Point d'accès Wi-Fi"), ('ROUTEUR', 'Routeur')], max_length=20)),
                ('adresse_mac', models.CharField(max_length=100)),
                ('service_attribue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipements_reseau', to='app.service')),
            ],
        ),
    ]
